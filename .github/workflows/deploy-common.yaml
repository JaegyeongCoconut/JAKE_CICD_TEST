name: Common Workflow

on:
  workflow_call:
    inputs:
      SERVICE_NAME:
        description: "배포 서비스 이름"
        required: true
        type: string
      DEPLOY_ENV:
        description: "배포 환경"
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    outputs:
      AUTHORIZED_ENV:
        description: "배포 가능한 환경 목록"
        value: ${{ jobs.output-set-up.outputs.AUTHORIZED_ENV }}
      AUTHORIZED_BRANCHES:
        description: "배포 가능한 브랜치 목록"
        value: ${{ jobs.output-set-up.outputs.AUTHORIZED_BRANCHES }}
      AUTHORIZED_USERS_IN_DEV:
        description: "개발 환경 배포 권한이 있는 사용자 목록"
        value: ${{ jobs.output-set-up.outputs.AUTHORIZED_USERS_IN_DEV }}
      S3_DEPLOY_BUCKET_REGION:
        description: "배포 S3 버킷이 생성된 리전"
        value: ${{ jobs.output-set-up.outputs.S3_DEPLOY_BUCKET_REGION }}
      S3_BUCKET_NAME:
        description: "서비스 S3 버킷 이름"
        value: ${{ jobs.output-set-up.outputs.S3_BUCKET_NAME }}

jobs:
  output-set-up:
    runs-on: ubuntu-latest
    permissions:
      id-token: write # NOTE: OIDC 토큰을 발급받을 수 있게 허용 (AWS/GCP 같은 외부 클라우드 인증에 사용)
      contents: read # NOTE: 레포지토리의 코드 및 파일을 읽을 수 있는 권한 (checkout 등에서 필요)
    env:
      AUTHORIZED_ENV: "dev" # NOTE: 배포 가능한 환경 목록. ','로 구분. 띄어쓰기 x
      AUTHORIZED_BRANCHES: "main,develop" # NOTE: 배포 가능한 브랜치 목록. ','로 구분. 띄어쓰기 x
      AUTHORIZED_USERS_IN_DEV: "JaegyeongCoconut" # NOTE: 개발 환경 배포 권한이 있는 사용자 목록. ','로 구분. 띄어쓰기 x
      # NOTE: 서비스별 S3 버킷, CloudFront ID 목록. JSON 형태로 작성. ','로 구분. 띄어쓰기 x
      AWS_CONFIG: '{
        "moveRanking-dev": {"s3BucketName": "kk-move-hero-web-dev-s3","cloudFrontId": "E315T6K6JEU9LJ"},
        }'
      AWS_IAM_ROLE: ""
      S3_DEPLOY_BUCKET_REGION: "ap-southeast-1" # NOTE: 배포 S3 버킷이 생성된 리전
      SERVICE_NAME: ${{ github.event.inputs.SERVICE_NAME }}
      DEPLOY_ENV: ${{ github.event.inputs.DEPLOY_ENV }}
    outputs:
      AUTHORIZED_ENV: ${{ steps.export-env.outputs.AUTHORIZED_ENV }}
      AUTHORIZED_BRANCHES: ${{ steps.export-env.outputs.AUTHORIZED_BRANCHES }}
      AUTHORIZED_USERS_IN_DEV: ${{ steps.export-env.outputs.AUTHORIZED_USERS_IN_DEV }}
      S3_DEPLOY_BUCKET_REGION: ${{ steps.export-env.outputs.S3_DEPLOY_BUCKET_REGION }}
      S3_BUCKET_NAME: ${{ steps.export-env.outputs.S3_BUCKET_NAME }}
    steps:
      - name: "🔑 AWS IAM KEY 설정"
        run: |
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
          printf "::notice:: ✅ AWS IAM KEY 설정이 완료되었습니다.\n"

      - name: "🛡️ 배포 환경 유효성 검사"
        run: |
          if [[ ! ",$AUTHORIZED_ENV," =~ ",$DEPLOY_ENV," ]]; then
            printf "::error:: 🚨 지원되지 않는 배포 환경입니다: $DEPLOY_ENV\n"
            exit 1
          fi
          printf "::notice:: ✅ 배포 환경 '$DEPLOY_ENV'는 유효합니다.\n"

      - name: "👤 배포 실행 사용자 권한 검증"
        run: |
          AUTHORIZED_USERS=$([[ "$DEPLOY_ENV" == "dev" ]] && echo "$AUTHORIZED_USERS_IN_DEV" || echo "")

          if [[ ! ",$AUTHORIZED_USERS," =~ ",${{ github.actor }}," ]]; then
            printf "::error:: 🚨 사용자 '${{ github.actor }}'는 배포 권한이 없습니다.\n"
            exit 1
          fi

          printf "::notice:: ✅ 사용자 '${{ github.actor }}'는 $DEPLOY_ENV 환경에 배포할 권한이 있습니다.\n"

      - name: "🛠️ AWS 배포 환경 설정"
        run: |
          SERVICE_KEY="${SERVICE_NAME}-${DEPLOY_ENV}"

          # NOTE: 상단에서 미리 작성해둔 AWS_CONFIG > JSON 환경 변수에서 S3 및 CloudFront ID 찾기
          S3_BUCKET_NAME=$(echo "$AWS_CONFIG" | jq -r --arg key "$SERVICE_KEY" '.[$key].s3BucketName')

          # NOTE: AWS_CONFIG 객체 內 S3 버킷 값 존재 여부 검증
          if [[ -z "$S3_BUCKET_NAME" || "$S3_BUCKET_NAME" == "null" ]]; then
            printf "::error:: 🚨 S3 버킷 정보가 존재하지 않습니다: $SERVICE_KEY\n"
            exit 1
          fi

          # NOTE: GitHub Actions 환경 변수에 S3 버킷 설정
          echo "S3_BUCKET_NAME=${S3_BUCKET_NAME}" >> $GITHUB_ENV
          printf "::notice:: ✅ 서비스 '$SERVICE_NAME'의 S3 버킷은 '${S3_BUCKET_NAME}'입니다.\n"

      - name: "🔎 S3 버킷 존재 여부 확인"
        run: |
          aws s3api head-bucket --bucket $S3_BUCKET_NAME --region $S3_DEPLOY_BUCKET_REGION || {
            printf "::error:: 🚨 S3 버킷 '$S3_BUCKET_NAME'이 존재하지 않습니다.\n"
            exit 1
          }
          printf "::notice:: ✅ S3 버킷 '$S3_BUCKET_NAME'에 접근할 수 있습니다.\n"

      - name: 📌 다음 .yaml 에서 사용할 환경변수 export (return)
        id: export-env
        run: |
          echo "AUTHORIZED_ENV=${AUTHORIZED_ENV}" >> $GITHUB_OUTPUT
          echo "AUTHORIZED_BRANCHES=${AUTHORIZED_BRANCHES}" >> $GITHUB_OUTPUT
          echo "AUTHORIZED_USERS_IN_DEV=${AUTHORIZED_USERS_IN_DEV}" >> $GITHUB_OUTPUT
          echo "AWS_IAM_ROLE=${AWS_IAM_ROLE}" >> $GITHUB_OUTPUT
          echo "S3_DEPLOY_BUCKET_REGION=${S3_DEPLOY_BUCKET_REGION}" >> $GITHUB_OUTPUT
          echo "S3_BUCKET_NAME=${S3_BUCKET_NAME}" >> $GITHUB_OUTPUT
