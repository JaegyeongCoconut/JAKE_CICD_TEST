name: Manual Trigger Workflow

on:
  workflow_dispatch: # 수동 실행 이벤트
    inputs:
      env:
        description: "Specify the environment (dev or prod)"
        required: true

jobs:
  run-job:
    runs-on: ubuntu-latest # 워크플로를 실행할 환경 설정
    env:
      S3_REGION: ap-southeast-1 # S3 Bucket 리전
      S3_ENV_BUCKET: jakecicd-env # 단일 S3 버킷 이름

    steps:
      # environment 입력값 확인 및 브랜치 설정
      - name: Validate environment and set branch
        id: validate_env
        run: |
          ENVIRONMENT=${{ github.event.inputs.env }}
          TARGET_BRANCH=""

          if [[ -z "$ENVIRONMENT" ]]; then
            echo "::error:: The 'environment' input is required but not provided."
            exit 1
          fi

          if [[ "$ENVIRONMENT" == "dev" ]]; then
            TARGET_BRANCH="develop"
          elif [[ "$ENVIRONMENT" == "prod" ]]; then
            TARGET_BRANCH="main"
          else
            echo "::error:: Invalid environment value: $ENVIRONMENT. Allowed values are 'dev' or 'prod'."
            exit 1
          fi

          echo "TARGET_BRANCH=$TARGET_BRANCH" >> $GITHUB_ENV
          echo "Environment: $ENVIRONMENT, Branch: $TARGET_BRANCH"

      # 브랜치 조건 검증
      - name: Check branch condition
        run: |
          CURRENT_BRANCH=$(echo "${{ github.ref }}" | sed 's|refs/heads/||')

          if [[ "$CURRENT_BRANCH" != "$TARGET_BRANCH" ]]; then
            echo "::error:: This workflow can only run on the '$TARGET_BRANCH' branch for the '$ENVIRONMENT' environment."
            exit 1
          fi
          echo "Branch validation passed: $CURRENT_BRANCH matches $TARGET_BRANCH."

      # 배포 권한 확인
      - name: Authorization check
        env:
          AUTHORIZED_USERS_IN_MAIN: "JaegyeongCoconut" # main branch 배포 권한이 있는 사용자 정의. ,로 구분
          AUTHORIZED_USERS_IN_DEVELOP: "JaegyeongCoconut" # develop branch 배포 권한이 있는 사용자 정의. ,로 구분
        run: |
          ENVIRONMENT=${{ github.event.inputs.env }}
          CURRENT_USER="${{ github.actor }}"
          TARGET_BRANCH=""

          echo "Environment: $ENVIRONMENT"
          echo "Current user: $CURRENT_USER"

          # 환경에 따른 대상 브랜치 및 권한 설정
          if [[ "$ENVIRONMENT" == "dev" ]]; then
            TARGET_BRANCH="develop"
            AUTHORIZED_USERS=$AUTHORIZED_USERS_IN_DEVELOP
          elif [[ "$ENVIRONMENT" == "prod" ]]; then
            TARGET_BRANCH="main"
            AUTHORIZED_USERS=$AUTHORIZED_USERS_IN_MAIN
          else
            echo "::error:: Invalid environment value: $ENVIRONMENT. Allowed values are 'dev' or 'prod'."
            exit 1
          fi

          echo "Target branch: $TARGET_BRANCH"
          echo "Authorized users: $AUTHORIZED_USERS"

          # 사용자 인증
          if [[ ! ",$AUTHORIZED_USERS," =~ ",$CURRENT_USER," ]]; then
            echo "::error:: User '$CURRENT_USER' is not authorized to deploy to the $TARGET_BRANCH branch."
            exit 1
          fi

          echo "User '$CURRENT_USER' is authorized to deploy to the $TARGET_BRANCH branch."

      # S3에서 환경 변수 파일 다운로드 (SSM 대신 S3 사용)
      - name: Download .env file from S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          ENVIRONMENT=${{ github.event.inputs.env }}
          TARGET_BRANCH=""
          echo "Selected environment: $ENVIRONMENT"

          # S3에서 파일 다운로드
          if [[ "$ENVIRONMENT" == "dev" ]]; then
            TARGET_BRANCH="develop"
            AUTHORIZED_USERS=$AUTHORIZED_USERS_IN_DEVELOP
          elif [[ "$ENVIRONMENT" == "prod" ]]; then
            TARGET_BRANCH="main"
            AUTHORIZED_USERS=$AUTHORIZED_USERS_IN_MAIN
          fi

          FILE_PATH=".env.$ENVIRONMENT"
          echo "Downloading .env file from S3: $S3_ENV_BUCKET/$FILE_PATH"

          aws s3 cp s3://$S3_ENV_BUCKET/$FILE_PATH \
            --region $S3_REGION
          echo ".env file downloaded for environment: $ENVIRONMENT"

      # 레포지토리 체크아웃
      - name: Checkout source code
        uses: actions/checkout@v3

      # 의존 파일 설치
      - name: Install Dependencies
        run: npm install

      # React Build
      - name: Build
        run: |
          set -a # 모든 export된 변수 자동 적용
          source .env # .env 파일의 내용을 환경 변수로 로드
          npm run build

      # S3에 배포
      - name: Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }} # IAM Access Key
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # IAM Secret Access Key
          S3_DEPLOY_BUCKET: s3://jakecicd # 배포 S3 Bucket
          BUILD_DIR: dist # 빌드 파일 이름
        run: |
          set -x # 디버깅 모드 활성화
          aws s3 ls $S3_DEPLOY_BUCKET --region $S3_REGION # S3 접근 확인
          aws s3 cp \
           --recursive \
           --region $S3_REGION \
           $BUILD_DIR $S3_DEPLOY_BUCKET
